nginx的安装
wget http://nginx.org/download/nginx-1.14.2.tar.gz
解压压缩包
tar -zxvf nginx-1.14.2.tar.gz
cd nginx-1.14.2 
依赖包
yum install pcre pcre-devel zlib zlib-devel openssl openssl-devel
创建用户和组别
groupadd www
useradd -g www www
配置
./configure --prefix=/usr/local/nginx --without-http_memcached_module --user=www --group=www --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module
编译安装
make && make install 
安装nginx开机启动配置文件
/usr/local/nginx/sbin/nginx
vim /etc/init.d/nginx

#!/bin/bash
# chkconfig: - 30 21
# description: http service.
# Source Function Library
. /etc/init.d/functions
# Nginx Settings
NGINX_SBIN="/usr/local/nginx/sbin/nginx"
NGINX_CONF="/usr/local/nginx/conf/nginx.conf"
NGINX_PID="/usr/local/nginx/logs/nginx.pid"
RETVAL=0
prog="Nginx"
start() {
echo -n $"Starting $prog: "
mkdir -p /dev/shm/nginx_temp
daemon $NGINX_SBIN -c $NGINX_CONF
RETVAL=$?
echo
return $RETVAL
}
stop() {
echo -n $"Stopping $prog: "
killproc -p $NGINX_PID $NGINX_SBIN -TERM
rm -rf /dev/shm/nginx_temp
RETVAL=$?
echo
return $RETVAL
}
reload(){
echo -n $"Reloading $prog: "
killproc -p $NGINX_PID $NGINX_SBIN -HUP
RETVAL=$?
echo
return $RETVAL
}
restart(){
stop
start
}
configtest(){
$NGINX_SBIN -c $NGINX_CONF -t
return 0
}
case "$1" in
start)
start
;;
stop)
stop
;;
reload)
reload
;;
restart)
restart
;;
configtest)
configtest
;;
*)
echo $"Usage: $0 {start|stop|reload| 
restart|configtest}"
RETVAL=1
esac
exit $RETVAL

安装开机启动
chkconfig --add /etc/init.d/nginx
chmod 755 /etc/init.d/nginx
chkconfig --add nginx
chkconfig nginx on

nginx安装完成
安装rtmp推流
git clone https://github.com/arut/nginx-rtmp-module.git

把文件放入要安装模块的位置
进入nginx安装文件

./configure --add-module=../nginx-rtmp-module --with-http_flv_module --with-http_mp4_module

因为是添加模块，所以只需要make
备份原文件
cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak
替换nginx二进制文件
cp -r nginx-1.14.2/objs/nginx /usr/local/nginx/sbin/nginx
检查配置文件
sbin/nginx -t
平滑重启
nginx -s reload

配置nginx


worker_processes  auto;
daemon off;
error_log  logs/error.log;
pid        logs/nginx.pid;
events {
    multi_accept on;
    worker_connections  65535;
    use epoll;
}
http {
    include       mime.types;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;
    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  30;
    gzip  on;
    server {
        listen       80;
        server_name  localhost;
      
        location /stat {
          rtmp_stat all;
          rtmp_stat_stylesheet stat.xsl;
        }
        location /stat.xsl {
           root /usr/local/src/nginx-rtmp-module;
        }
        location /control {
          rtmp_control all;
        }
        location /hls {
          types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
          }
          root html;
          expires -1;
        }
        location ~\.flv {
          flv;
        }
        location ~\.mp4 {
          mp4;
        }
    }  
}
rtmp {
  server {
    listen 1935;
    chunk_size 4096;
    application hls {
      allow publish 127.0.0.1;
      live on;
      hls on;
      hls_path /usr/local/nginx/html/hls;
      hls_fragment 5s;
    }
  }
}

nginx在docker运行需要关闭daemon选项.
rtmp->server->application为具体的直播应用,hls是我的直播应用名称，可以根据实际情况修改。

安装ffpmeg
rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
rpm -Uvh http://li.nux.ro/download/nux/dextop/el6/x86_64/nux-dextop-release-0-2.el6.nux.noarch.rpm

yum install ffmpeg ffmpeg-devel -y  


2.安装ffmpeg
1) CentOS 7
sudo rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm
2) CentOS 6
sudo rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el6/x86_64/nux-dextop-release-0-2.el6.nux.noarch.rpm
3)安装FFmpeg 和 FFmpeg开发包
sudo yum install ffmpeg ffmpeg-devel -y
4)测试是否安装成功
ffmpeg

脚本
wget -q  https://raw.githubusercontent.com/Thnineer/Bash/master/ffmpeg.sh && chmod +x ffmpeg.sh && ./ffmpeg.sh




nginx在docker运行需要关闭daemon选项.
rtmp->server->application为具体的直播应用,hls是我的直播应用名称，可以根据实际情况修改。

推流测试
推流地址
rtmp://localhost:1935/hls/demo
hls为上面配置的application名称，demo是直播名称，客户端使用http://localhost/hls/demo.m3u8进行播放

视频推流
ffmpeg -re -i a.mp4 -vcodec copy -f flv rtmp://localhost:1935/hls/demo
web中播放

<video src="http://localhost/hls/demo.m3u8" controls></video>
音频推流
ffmpeg -re -i a.mp3 -acodec aac -f flv rtmp://localhost:1935/hls/demo
web中播放

<audio src="http://localhost/hls/demo.m3u8" controls></audio>
推流与播放地址说明
假设nginx配置http端口为80,http目录为hls,rtmp端口为1935,application名称为hls,需要播放的直播名称为demo
推流地址rtmp://localhost:1935/hls/demo
播放地址http://localhost/hls/demo.m3u8
重要说明
如果没有直播推流，nginx是不会产生m3u8文件的，这点需要注意!

